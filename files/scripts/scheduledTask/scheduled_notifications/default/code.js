"/*\n * Scheduled Task: scheduled_notifications\n */\n\nvar Corus = require('corus');\nvar notification = require('/custom_modules/notification');\n\n/**\n * Response\n *\n * - next:  Method to invoke when the scheduled task has finished\n */\n\n/**\n * Execution Environment:\n *\n *  - process.env.HOST:     The host where this script is running.\n *  - process.env.APP:      The slug of the app that contains this trigger.\n *  - process.env.KEY:      The key to impersonate a \"developer\" user on this app.\n */\n\n/**\n *  Corus Client\n */\n\nvar corus = new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true});\n\n/**\n * Code\n */\n\nvar now = new Date();\n\nvar filter = {\n  \t\n    count: false,\n    where: { \n \t\t\n        published: true,\n        is_sent: {$ne: true},\n        datum: {$lte: now} \n    \n    }\n    \n};\n\ncorus.apps(process.env.APP).collections('notifications').data().get(filter, function(err, notifications){\n   \t\n    if(err){\n     \t\n        next(err);\n        \n    } else {\n     \t\n        var array = notifications.array || [];\n        \n        (function step(index){\n            \n            if(index >= array.length){\n            \t\n                console.log('Se han procesado ' + array.length + ' notificaciones');\n                next(null);\n                \n            } else {\n             \t\n                notification.process(corus, array[index], function(err, notificationJson){\n                   \t\n                    if(err){\n                     \t\n                        console.error('Error procesando notificación: ' + JSON.stringify(err));\n                        step(index+1);\n                        \n                    } else {\n                        \n                        notificationJson = {\n                          \t\n                            is_sent: notificationJson.is_sent,\n                            result_datum: notificationJson.result_datum,\n                            result: notificationJson.result\n                            \n                        };\n                        \n                        corus.apps(process.env.APP).collections('notifications').data(array[index].id).put(notificationJson, function(err, result){\n\n                            if(err){\n\n                                console.error('Error actualizando notificación: ' + JSON.stringify(err));\n                                step(index+1);\n\n                            } else {\n\n                                step(index+1);\n\n                            }\n\n                        });\n\n                    }\n                    \n                });\n                \n            }\n            \n        })(0);\n        \n    }\n    \n});\n"
