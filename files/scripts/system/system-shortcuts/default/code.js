"/*\n * System Script: system-shortcuts\n *\n *\n * Execution Environment:\n *\n *  - process.env.HOST:     The host where this script is running.\n *  - process.env.APP:      The slug of the app that contains this trigger.\n *  - process.env.USER:     The email of the user who is invoking this script.\n *  - process.env.KEY:      The key to impersonate a \"developer\" user on this app.\n *\n * Request Parameters:\n *\n *  - req.user:             (JSON) JSON representing the user who invokes the script.\n *  - req.cookies:          (JSON) Cookies JSON object\n *\n */\n\nvar Corus \t\t= require('corus'),\n\tasync\t\t= require('async'),\n\tlang \t\t= req.query.lang || req.headers.lang || req.cookies.lang || null,\n\tcorus \t\t= new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true, lang: lang, fillWithDefaultLang: true});\n\n\nif (req.method === 'GET') {\n\n    //shortcuts.push({type: 'separator', name: 'Menu 1'});\n    //shortcuts.push({type: 'collection', name: 'Friendly Name 1', target: 'collection_slug_1', params: {param1: 'value1'}});\n    //shortcuts.push({type: 'collection', name: 'Friendly Name 2', target: 'collection_slug_2', params: {param2: 'value2'}});\n    //shortcuts.push({type: 'separator', name: 'Menu 2'});\n    //shortcuts.push({type: 'collection', name: 'Friendly Name 3', target: 'collection_slug_3', params: {}});\n    //shortcuts.push({type: 'collection', name: 'Friendly Name 4', target: 'collection_slug_4', params: {param4: 'value4'}});\n    \n    async.waterfall(\n        [\n            function(cb){\n                \n                var filter = {\n                    order:\t'order',\n                    count:\tfalse\n                };\n\n                // Cerquem totes les sub aplicacions de Lyncat\n                \n                corus.apps(process.env.APP).collections('subapps').data().get(filter, function(err, result){\n                    \n                    return cb(err, result ? result.array : null);\n                \n                });\n\n            },\n            \n            function(subapps, cb){\n                \n                var shortcuts = [];\n                \n                shortcuts.push({type: 'separator', name: 'Settings'});\n                \n                shortcuts.push({type: 'collection', name: 'Applications', target: 'subapps', params: {}});\n                shortcuts.push({type: 'collection', name: 'Layout Types', target: 'layout_types', params: {}});\n                shortcuts.push({type: 'collection', name: 'Actions', target: 'actions', params: {}});\n                shortcuts.push({type: 'collection', name: 'User Tags', target: 'user_tags', params: {}});\n                \n                shortcuts.push({type: 'separator', name: 'Applications'});\n                \n                subapps.forEach(function(app, appIndex){\n                \t\n                     shortcuts.push({name: app.title, items: [\n                     \t\n                         {type: 'collection', name: 'Applications main menu', target: 'app_menu', params: {app: app.id}},\n                         \n                         {name: 'Plain Pages', items: [\n                         \t\n                             {type: 'collection', name: 'Pages', target: 'static_entries', params: {app: app.id}},\n                             {type: 'collection', name: 'Pages in lists', target: 'static_list_entries', params: {app: app.id}},\n                             \n                         ]},\n                        \n                         {type: 'collection', name: 'Calendar entries', target: 'calendar_entries', params: {app: app.id}},\n                         \n                         {name: 'News', items: [\n                         \t\n                             {type: 'collection', name: 'News', target: 'news_entries', params: {app: app.id}},\n                             {type: 'collection', name: 'Categories', target: 'news_categories', params: {app: app.id}},\n                             \n                         ]},\n                         \n                         {type: 'collection', name: 'Videos', target: 'videos_entries', params: {app: app.id}},\n                         {type: 'collection', name: 'Surveys', target: 'surveys_entries', params: {app: app.id}},\n                         \n                         {name: 'Places & Peoples', items: [\n                         \t\n                             {type: 'collection', name: 'Entries', target: 'directory_entries', params: {app: app.id}},\n                             {type: 'collection', name: 'Categories', target: 'directory_categories', params: {app: app.id}},\n                             \n                         ]},\n                         \n                         {type: 'collection', name: 'Notifications', target: 'notifications', params: {app: app.id}},\n                         {type: 'collection', name: 'Adverts', target: 'adverts', params: {app: app.id}}\n                         \n                     ]});\n                \n                });\n                \n                return cb(null, shortcuts);\n                \n            }\n        ],\n        \n        function(error, shortcuts){\n            \n            next(error, shortcuts);\n            \n        }\n    );\n\n} else {\n\n    next({statusCode: 400, message: 'Invalid HTTP verb: ' + req.method});\n\n}\n\n"
