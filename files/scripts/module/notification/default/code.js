"/*\n * Module: notification\n *\n * Example of custom_module require:\n *\n * var notification = require('/custom_modules/notification');\n *\n */\n\n/**\n * Const\n */\n\nvar MAX_PUSH_LENGTH = 100;\n\n/**\n * Private\n */\n\nvar async = require('async');\n\n\n/**\n * Public Methods\n */\n\nexports.process = function(corus, notificationJson, callback){\n    \n    async.waterfall(\n    \t\n        [\n        \t\n            function(cb){\n             \t\n                if(!notificationJson.id){\n                 \t\n                    return cb(null, null);\n                    \n                } else {\n                 \t\n                    corus.apps(process.env.APP).collections('notifications').data(notificationJson.id).get(function(err, result){\n                       \t\n                        if(err && err.statusCode !== 404){\n                         \t\n                            return cb(err);\n                            \n                        } else {\n                         \t\n                            return cb(null, result);\n                            \n                        }\n                        \n                    });\n                    \n                }\n                \n            },\n            \n            function(notification, cb){\n                \n                var now = new Date();\n                \n                if(!notification){\n                    \n                    return cb(null, notificationJson);\n                    \n                } else if(notification.is_sent && notificationJson.published === false){\n                 \t\n                    //Estamos despublicando una notificación enviada\n                    \n                    notificationJson.is_sent = false;\n                    notificationJson.result_datum = null;\n                    notificationJson.result = null;\n                    \n                    return cb(null, notificationJson);\n                    \n                } else if(!notification.is_sent && notificationJson.published && (!notificationJson.datum || (new Date(notificationJson.datum)).getTime() < now.getTime())) {\n                    \n                    //Estamos enviando la notificación ahora mismo\n                    \n                    notificationJson.is_sent = true;\n                    notificationJson.result_datum = now;\n                    var body = notificationJson.body;\n                    \n                    if(body && body.length > MAX_PUSH_LENGTH){\n                     \t\n                        body = body.substring(0, 97) + '...';\n                        \n                    }\n                    \n                    var pushJson = {\n                      \t\n                        body: body\n                        \n                    };\n                    \n                    if(notificationJson.filter_no_logged_users_only){\n                        \n                        //Solo a los no logados\n                        \n                        corus.apps(process.env.APP).installations().push(pushJson, {user: null}, function(err, pushResult){\n                           \t\n                            if(!err && pushResult){\n                             \t\n                                notificationJson.result = JSON.stringify(pushResult);\n                                \n                            }\n                            \n                            return cb(err, notificationJson);\n                            \n                        });\n                        \n                    } else if(notificationJson.tag_filters && notificationJson.tag_filters.length > 0){\n                    \t\n                        //Solo a los que cumplen una serie de tags\n                        \n                        var filter = {\n                          \t\n                            where: {tags: {$in: notificationJson.tag_filters}},\n                            limit: 99999,\n                            projection: {email: 1},\n                            count: false\n                            \n                        };\n                        \n                        corus.apps(process.env.APP).users().get(filter, function(err, users){\n                           \t\n                            if(err){\n                             \t\n                                return cb(err);\n                                \n                            } else {\n                             \t\n                                var emails = users.array.map(function(item){\n                                   \t\n                                    return item.email;\n                                    \n                                });\n                                \n                                corus.apps(process.env.APP).installations().push(pushJson, {user: {$in: emails}}, function(err, pushResult){\n\n                                    if(!err && pushResult){\n\n                                        notificationJson.result = JSON.stringify(pushResult);\n\n                                    }\n\n                                    return cb(err, notificationJson);\n\n                                });\n                                \n                            }\n                            \n                        });\n                        \n                        \n                    } else {\n                        \n                     \t//A todo el mundo\n                        \n                        corus.apps(process.env.APP).installations().push(pushJson, {}, function(err, pushResult){\n                           \t\n                            if(!err && pushResult){\n                             \t\n                                notificationJson.result = JSON.stringify(pushResult);\n                                \n                            }\n                            \n                            return cb(err, notificationJson);\n                            \n                        });\n                        \n                    }\n\n                } else {\n                 \t\n                    return cb(null, notificationJson);\n                    \n                }\n                \n            }\n            \n        ],\n        \n        function(err, notification){\n         \t\n            return callback(err, notification);\n            \n        }\n        \n    ); \n\n};"
