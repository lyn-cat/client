"/*\n * REST Resource: v1/applications\n *\n * URL for this resource: http://lyncat.corus.io/custom/dev_lyncat/v1/applications\n *\n */\n\nvar Corus \t\t\t= require('corus'),\n    async\t\t\t= require('async'),\n    moment\t\t\t= require('moment'),\n\tlang \t\t\t= req.query.lang || req.headers.lang || req.cookies.lang || null,\n\tcorus \t\t\t= new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true, lang: lang, fillWithDefaultLang: true}),\n    filter\t\t\t= {\n        where: \t\t{\n            enabled: \ttrue\n        },\n\t\torder:\t\t'order',\n        count:\t\ttrue\n    },\n    menu_filter\t\t= {\n        where: \t\t{\n            enabled: \ttrue,\n            '$or':\t\t[{ 'tag_filters':null }, { 'tag_filters':[] }]\n        },\n\t\torder:\t\t'order',\n        count:\t\ttrue\n    },\n    menu_entries\t= {},\n    adverts\t\t\t= {};\n\n\n\nif (req.method === 'GET') {\n    \n    /*\n     *\tGet the Lyncat Applications and settings\n     *\n     */\n    \n    async.waterfall(\n        [\n            function(icallback) {\n                \n                // Permissions\n                if (req.user && req.user.email){\n                    \n                    require('/custom_modules/auth').getUserTags(corus, req.user.email, function(err, user_tags){\n                        \n                        if (!err && user_tags && user_tags.length > 0){\n                            \n                            menu_filter.where.$or.push({\n                                'tag_filters': {\n                                    $in: user_tags\n                                }\n                            });\n                            \n                        }\n                        \n                        icallback(err);\n                    \n                    });\n                    \n                } else {\n                    icallback();\n                }\n                \n            },\n            function(icallback){\n                \n                // Lyncat App custom settings\n                corus.apps(process.env.APP).get(function(err, app){\n                    delete app.createdOn;\n                    delete app.createdBy;\n                    delete app.modifiedBy;\n                    delete app.admins;\n                    app.data.loader_image = (app.data.loader_image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/data/loader_image' : null;\n                    app.data.profile_background_image = (app.data.profile_background_image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/data/profile_background_image' : null;\n                    icallback(err, app);\n                });\n\n            },\n            function(app, icallback){\n                \n                // Applications list\n                corus.apps(process.env.APP).collections('subapps').data().get(filter, function(err, res){\n                    \n                    if (res.array && res.array.length){\n                        res.array.map(function(a){\n                            delete a._title;\n                            delete a._subTitle;\n                            delete a.createdOn;\n                            delete a.createdBy;\n                            delete a.modifiedBy;\n                            a.image = (a.image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/subapps/data/' + a.id + '/image' : null;\n                            a.sidemenu_logo_image = (a.sidemenu_logo_image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/subapps/data/' + a.id + '/sidemenu_logo_image' : null;\n                            return a;\n                        });\n                    }\n                    \n                    icallback(err, app, res);\n                    \n                });\n\n            },\n            function(app, subapps, icallback){\n                \n                // Applications menu entries\n                if (subapps.array && subapps.array.length){\n                    \n                    corus.apps(process.env.APP).collections('app_menu').data().get(menu_filter, function(err, res){\n                        \n                        console.log('menu_entries: ' + JSON.stringify(res));\n                        \n                        if (res.array && res.array.length){\n                            \n                            res.array.forEach(function(m){\n                                \n                                delete m._title;\n                                delete m._subTitle;\n                                delete m.createdOn;\n                                delete m.createdBy;\n                                delete m.modifiedBy;\n                                \n                                switch(m.type){\n                                    case 'static':\n                                        m.controller = '/controllers/layouts/static';\n                                        break;\n                                    case 'static_list':\n                                        m.controller = '/controllers/layouts/static_list';\n                                        break;\n                                    case 'directory':\n                                        m.controller = '/controllers/layouts/directory';\n                                        break;\n                                    case 'videos':\n                                        m.controller = '/controllers/layouts/videos';\n                                        break;\n                                    case 'survey':\n                                        m.controller = '/controllers/layouts/survey';\n                                        break;\n                                    case 'notifications':\n                                        m.controller = '/controllers/layouts/notifications';\n                                        break;\n                                    case 'news':\n                                        m.controller = '/controllers/layouts/news';\n                                        break;\n                                    case 'calendar':\n                                        m.controller = '/controllers/layouts/calendar';\n                                        break;\n                                }\n                                \n                                if (!menu_entries[m.app]){\n                                    menu_entries[m.app] = [];\n                                }\n                                \n                                menu_entries[m.app].push(m);\n                                \n                            });\n                            \n                        }\n                        \n                        icallback(err, app, subapps);\n                        \n                    });\n                    \n                } else {\n                    icallback(null, app, subapps);\n                }\n                \n            },\n            function(app, subapps, icallback){\n                \n                // Get the available adverts\n                if (subapps.array && subapps.array.length){\n                    \n                    corus.apps(process.env.APP).collections('adverts').data().get(filter, function(err, ads){\n                        \n                        if (ads.array && ads.array.length){\n                            \n                            ads.array.forEach(function(a){\n                                \n                                delete a._title;\n                                delete a._subTitle;\n                                delete a.createdOn;\n                                delete a.createdBy;\n                                delete a.modifiedBy;\n                            \ta.image = (a.image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/adverts/data/' + a.id + '/image' : null;\n                                \n                                if (!adverts[a.app]){\n                                    adverts[a.app] = [];\n                                }\n                                \n                                adverts[a.app].push(a);\n                                \n                            });\n                            \n                        }\n                        \n                        icallback(err, app, subapps);\n                        \n                    });\n                    \n                } else {\n                    icallback(null, app, subapps);\n                }\n                \n            },\n            function(app, subapps, icallback){\n                \n                // Cook the results\n                if (subapps.array && subapps.array.length){\n\n                    subapps.array.map(function(a){\n                        a.menu_entries = menu_entries[a.id] || null;\n                        a.adverts = adverts[a.id] || null;\n                        return a;\n                    });\n                    \n                }\n                \n                icallback(null, app, subapps);\n                \n            }\n        ],\n        function(error, app, subapps){\n            next(error, {\n                settings:\t\tapp,\n                applications:\tsubapps.array,\n                count:\t\t\tsubapps.count\n            });\n        }\n    );\n\n} else {\n\n    next({statusCode: 400, message: 'Invalid HTTP verb: ' + req.method});\n\n}\n\n"
