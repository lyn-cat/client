"/*\n * REST Resource: v1/directory_categories/:menu_entry\n *\n * URL for this resource: http://lyncat.corus.io/custom/dev_lyncat/v1/directory_categories/:menu_entry\n *\n */\n\nvar Corus \t\t\t\t= require('corus'),\n    async\t\t\t\t= require('async'),\n    moment\t\t\t\t= require('moment'),\n\tlang \t\t\t\t= req.query.lang || req.headers.lang || req.cookies.lang || null,\n\tcorus \t\t\t\t= new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true, lang: lang, fillWithDefaultLang: true}),\n    unique_ids\t\t\t= [],\n    filter\t\t\t\t= {\n        where: \t\t{\n            menu_entry:\treq.params.menu_entry\n        },\n        order:\t\t'order',\n        skip:\t\tnull,\n        limit:\t\tnull,\n        count:\t\tfalse\n    },\n    children_filter\t\t= {\n        where: \t\t{\n            enabled: \ttrue,\n            '$or':\t\t[{ 'tag_filters':null }, { 'tag_filters':[] }],\n\t\t\tcategory: {\n                $in: unique_ids\n            }\n        },\n        order:\t\t'order',\n        count:\t\tfalse\n    },\n    collection\t\t\t= 'directory_categories',\n\tentriesCollection\t= 'directory_entries';\n\n\n\nif (req.method === 'GET') {\n    \n    if (req.query && req.query.skip !== undefined && req.query.skip !== null){\n        filter.skip = req.query.skip;\n    }\n    \n    if (req.query && req.query.limit !== undefined && req.query.limit !== null){\n        filter.limit = req.query.limit;\n    }\n\n    async.waterfall(\n        [\n            function(icallback) {\n                \n                // Permissions\n                if (req.user && req.user.email){\n                    \n                    require('/custom_modules/auth').getUserTags(corus, req.user.email, function(err, user_tags){\n                        \n                        if (!err && user_tags && user_tags.length > 0){\n                            \n                            children_filter.where.$or.push({\n                                'tag_filters': {\n                                    $in: user_tags\n                                }\n                            });\n                            \n                        }\n                        \n                        icallback(err);\n                    \n                    });\n                    \n                } else {\n                    icallback();\n                }\n                \n            },\n            function(icallback) {\n\n                corus.apps(process.env.APP).collections(collection).data().get(filter, function(err, result){\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array = result.array.map(function(i){\n                            \n                            delete i._title;\n                            delete i._subTitle;\n                            delete i.createdOn;\n                            delete i.createdBy;\n                            delete i.modifiedBy;\n                            \n                            i.image = (i.image) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/' + collection + '/data/' + i.id + '/image' : null;\n                            \n                            unique_ids.push(i.id);\n                            \n\t\t\t\t\t\t\treturn i;\n                            \n                        });\n\n                    }\n                    \n                    icallback(null, result);\n                    \n                });\n\n            },\n            function(main_result, icallback) {\n                \n                // Get Children Entries\n                corus.apps(process.env.APP).collections(entriesCollection).data().get(children_filter, function(err, result){\n                    \n                    var all_children = [];\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array.forEach(function(i){\n                            all_children.push({\n                                id:\t\t\ti.id,\n                                menu_entry:\ti.menu_entry,\n                                category:\ti.category,\n                            });\n                        });\n                        \n                    }\n\n                    icallback(err, main_result, all_children);\n                    \n                });\n                \n            },\n            function(main_result, all_children, icallback){\n                \n                if (main_result.array && main_result.array.length > 0){\n                    \n                    main_result.array.forEach(function(i){\n                        \n                        i.total = all_children.filter(function(e){\n                            return (e.category === i.id);\n                        }).length;\n                        \n                    });\n                    \n                }\n                \n                icallback(null, main_result);\n                \n            }\n        ],\n        function(error, response){\n            next(error, response);\n        }\n\n    );\n\n} else {\n\n    next({statusCode: 400, message: 'Invalid HTTP verb: ' + req.method});\n\n}"
