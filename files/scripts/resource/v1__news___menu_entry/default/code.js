"/*\n * REST Resource: v1/news/:menu_entry\n *\n * URL for this resource: http://lyncat.corus.io/custom/dev_lyncat/v1/news/:menu_entry\n *\n */\n\nvar Corus \t\t\t\t= require('corus'),\n    async\t\t\t\t= require('async'),\n    moment\t\t\t\t= require('moment'),\n\tlang \t\t\t\t= req.query.lang || req.headers.lang || req.cookies.lang || null,\n\tcorus \t\t\t\t= new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true, lang: lang, fillWithDefaultLang: true}),\n    unique_ids\t\t\t= [],\n    filter\t\t\t\t= {\n        where: \t\t{\n            menu_entry:\treq.params.menu_entry,\n            enabled: \ttrue,\n            '$or':\t\t[{ 'tag_filters':null }, { 'tag_filters':[] }]\n        },\n        order:\t\t'-datum',\n        skip:\t\tnull,\n        limit:\t\tnull,\n        count:\t\tfalse\n    },\n    children_filter\t\t= {\n        where: \t\t{\n\t\t\tparent: {\n                $in: unique_ids\n            }\n        },\n        order:\t\t'order',\n        count:\t\tfalse\n    },\n    collection\t\t\t= 'news_entries',\n    imagesCollection \t= 'images_entries_news',\n\tactionsCollection \t= 'actions_entries_news',\n\tfilesCollection \t= 'files_entries_news';\n\n\n\nif (req.method === 'GET') {\n    \n    if (req.query && req.query.skip !== undefined && req.query.skip !== null){\n        filter.skip = req.query.skip;\n    }\n    \n    if (req.query && req.query.limit !== undefined && req.query.limit !== null){\n        filter.limit = req.query.limit;\n    }\n    \n    if (req.query && req.query.search){\n        filter.search = req.query.search;\n    }\n    \n    if (req.query && req.query.category){\n        filter.where.categories = {\n            $in: [req.query.category]\n        };\n    }\n\n    async.waterfall(\n        [\n            function(icallback) {\n                \n                // Permissions\n                if (req.user && req.user.email){\n                    \n                    require('/custom_modules/auth').getUserTags(corus, req.user.email, function(err, user_tags){\n                        \n                        if (!err && user_tags && user_tags.length > 0){\n                            \n                            filter.where.$or.push({\n                                'tag_filters': {\n                                    $in: user_tags\n                                }\n                            });\n                            \n                        }\n                        \n                        icallback(err);\n                    \n                    });\n                    \n                } else {\n                    icallback();\n                }\n                \n            },\n            function(icallback) {\n\n                corus.apps(process.env.APP).collections(collection).data().get(filter, function(err, result){\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array = result.array.map(function(i){\n                            \n                            delete i._title;\n                            delete i._subTitle;\n                            delete i.createdOn;\n                            delete i.createdBy;\n                            delete i.modifiedBy;\n                            \n                            i.cover = (i.cover) ? 'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/' + collection + '/data/' + i.id + '/cover' : null;\n                            \n                            i.body = i.body.replace(/\\!\\[(.*)\\]\\((.*)\\)/gm, function(a){\n\n                                if (a.match(/http:\\/\\/|https:\\/\\//gm)){\n                                    return a;\n                                } else {\n                                    return a.replace(/\\!\\[(.*)\\]\\((.*)\\)/gm, '![$1](https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/' + collection + '/data/' + i.id + '/body/$2)');\n                                }\n\n                            });\n                            \n                            i.images = [];\n                            i.actions = [];\n                            i.files = [];\n                            \n                            unique_ids.push(i.id);\n                            \n\t\t\t\t\t\t\treturn i;\n                            \n                        });\n\n                    }\n                    \n                    icallback(null, result);\n                    \n                });\n\n            },\n            function(main_result, icallback) {\n                \n                // Get related Images\n                corus.apps(process.env.APP).collections(imagesCollection).data().get(children_filter, function(err, result){\n                    \n                    var all_images = [];\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array.forEach(function(i){\n                            all_images.push({\n                                parent:\t\ti.parent,\n                                url: \t\t'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/' + imagesCollection + '/data/' + i.id + '/image',\n                                caption:\ti.caption,\n                                order:\t\ti.order\n                            });\n                        });\n                        \n                    }\n\n                    icallback(err, main_result, all_images);\n                    \n                });\n                \n            },\n            function(main_result, all_images, icallback) {\n                \n                // Get related Files\n                corus.apps(process.env.APP).collections(filesCollection).data().get(children_filter, function(err, result){\n                    \n                    var all_files = [];\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array.forEach(function(i){\n                            all_files.push({\n                                parent:\t\t\ti.parent,\n                                file: \t\t\t'https://' + process.env.HOST + '/api/v1/apps/' + process.env.APP + '/collections/' + filesCollection + '/data/' + i.id + '/file',\n                                title:\t\t\ti.title,\n                                description:\ti.description,\n                                order:\t\t\ti.order\n                            });\n                        });\n                        \n                    }\n\n                    icallback(err, main_result, all_images, all_files);\n                    \n                });\n                \n            },\n            function(main_result, all_images, all_files, icallback) {\n                \n                // Get related Actions\n                corus.apps(process.env.APP).collections(actionsCollection).data().get(children_filter, function(err, result){\n                    \n                    var all_actions = [];\n                    \n                    if (!err && result.array && result.array.length > 0){\n                        \n                        result.array.forEach(function(i){\n                            all_actions.push({\n                                parent:\t\ti.parent,\n                                action: \ti.action,\n                                link:\t\ti.link,\n                                order:\t\ti.order\n                            });\n                        });\n                        \n                    }\n\n                    icallback(err, main_result, all_images, all_files, all_actions);\n                    \n                });\n                \n            },\n            function(main_result, all_images, all_files, all_actions, icallback){\n                \n                if (main_result.array && main_result.array.length > 0){\n                    \n                    main_result.array.forEach(function(i){\n                        \n                        i.images = all_images.filter(function(e){\n                            return (e.parent === i.id);\n                        });\n                        \n                        i.files = all_files.filter(function(e){\n                            return (e.parent === i.id);\n                        });\n                        \n                        i.actions = all_actions.filter(function(e){\n                            return (e.parent === i.id);\n                        });\n                        \n                    });\n                    \n                }\n                \n                icallback(null, main_result);\n                \n            }\n        ],\n        function(error, response){\n            next(error, response);\n        }\n\n    );\n\n} else {\n\n    next({statusCode: 400, message: 'Invalid HTTP verb: ' + req.method});\n\n}"
