"/*\n * REST Resource: v1/login\n *\n * URL for this resource: http://lyncat.corus.io/custom/dev_lyncat/v1/login\n *\n */\n\nvar Corus \t\t\t\t= require('corus'),\n    async\t\t\t\t= require('async'),\n\tlang \t\t\t\t= null,\n\tcorus \t\t\t\t= new Corus({host: process.env.HOST, key: process.env.KEY, avoidTrigger: true, lang: lang, fillWithDefaultLang: true}),\n    jsonBody;\n\n\n\nif (req.method === 'POST') {\n\n    jsonBody = JSON.parse(req.body);\n    \n    if (jsonBody && jsonBody.email && jsonBody.password){\n        \n        async.waterfall(\n            [\n                function(icallback){\n                    \n                    // Login for returning the key\n\t\t\t\t\tcorus.login({\n                        email: \t\tjsonBody.email, \n                        password: \trequire('/custom_modules/password').decode(jsonBody.password)\n                    }, function(err, user){\n                        \n                        if (!err && user){\n\t                        user.avatar = 'https://' + process.env.HOST + '/api/v1/users/' + jsonBody.email + '/avatar';\n                        }\n                        \n                        icallback(err, user);\n\t\t\t\t\t});\n                    \n                }\n            ],\n            function(error, user){\n                next(error, user);\n            }\n        );\n        \n    } else {\n        // Missing parameters error\n\t    next({statusCode: 400, message: 'Invalid user parameters.'});\n    }\n\n} else {\n\n    next({statusCode: 400, message: 'Invalid HTTP verb: ' + req.method});\n\n}\n\n"
